/*!
 * Pixastic - JavaScript Image Processing
 * http://pixastic.com/
 * Copyright 2012, Jacob Seidelin
 * 
 * Dual licensed under the MPL 1.1 or GPLv3 licenses.
 * http://pixastic.com/license-mpl.txt
 * http://pixastic.com/license-gpl-3.0.txt
 *
 */
var Pixastic=(function(){var g;function c(i,j,h){if(i.createImageData){return i.createImageData(j,h)}else{return i.getImageData(0,0,j,h)}}function f(j,k){var m={},l=j.canvas.width,i=j.canvas.height,h=[],k=k||"";if(!g){if(typeof window.Worker!="undefined"){try{g=new window.Worker(k+"pixastic.worker.control.js")}catch(n){if(location.protocol=="file:"){f.log("Could not create native worker, running from file://")}else{f.log("Could not create native worker.")}}}if(!g){g=new f.Worker()}}for(var n in f.Effects){if(f.Effects.hasOwnProperty(n)){(function(o){m[o]=function(p){h.push({effect:o,options:p});return m};m.done=function(t,q){var p,s;try{p=j.getImageData(0,0,l,i)}catch(r){if(location.protocol=="file:"){throw new Error("Could not access image data, running from file://")}else{throw new Error("Could not access image data, is canvas tainted by cross-origin data?")}}s=c(j,l,i);g.postMessage({queue:h,inData:p,outData:s,width:l,height:i});g.onmessage=function(u){var v=u.data;switch(v.event){case"done":j.putImageData(v.data,0,0);if(t){t()}if(q){q(1)}break;case"progress":if(q){q(v.data)}break;case"error":break}};if(q){q(0)}}})(n)}}return m}f.Worker=function(){var i=this;function h(l){var p=l.queue,o=l.inData,r=l.outData,j=l.width,s=l.height,m;for(var n=0;n<p.length;n++){var q=p[n].effect,t=p[n].options,k;if(n>0){m=o;o=r;r=m}if(typeof importScripts=="function"){k=function(u){i.onmessage({data:{event:"progress",data:(n+u)/p.length}});return u}}f.Effects[q](o.data,r.data,j,s,t,k);i.onmessage({data:{event:"progress",data:(n+1)/p.length}})}i.onmessage({data:{event:"done",data:r}})}this.postMessage=function(j){setTimeout(function(){h(j)},0)};this.onmessage=function(){}};f.log=function(h){if(typeof console!="undefined"&&console.log){console.log("Pixastic: "+h)}};function d(i){var h;if(typeof i=="object"){if(typeof i.tagName=="string"){if(i.tagName.toLowerCase()=="canvas"||i.tagName.toLowerCase()=="img"){h=document.createElement("canvas");h.width=i.width;h.height=i.height;h.getContext("2d").drawImage(i,0,0)}}else{if((window.ImageData&&i instanceof window.ImageData)||(typeof i.width=="number"&&typeof i.height=="number"&&typeof i.data=="object")){h=document.createElement("canvas");h.width=i.width;h.height=i.height;h.getContext("2d").putImageData(i,0,0)}}}return h}function a(j){var h=d(j),i=new Image();i.width=h.width;i.height=h.height;i.src=h.toDataURL();return i}function b(j){var i=d(j),h=i.getContext("2d");return h.getImageData(0,0,i.width,i.height)}function e(r){var j=[],k,o,l=r.data,h=Math.round,m,q=r.width*r.height;for(k=0;k<256;k++){j[k]=0}for(k=0;k<q;k++){o=k*4;j[h((l[o]+l[o+1]+l[o+2])/3)]++}m=0;for(k=0;k<256;k++){if(j[k]>m){m=j[k]}}return{maxValue:m,values:j}}f.toCanvas=d;f.toImage=a;f.toImageData=b;f.histogram=e;f.Color={rgb2hsl:function(j,i,h){if(j<0){j=0}if(i<0){i=0}if(h<0){h=0}if(j>255){j=0}if(i>255){i=0}if(h>255){h=0}},rgb2hsv:function(j,i,h){},rgb2hex:function(j,i,h){},hsl2rgb:function(k,j,i){},hsv2rgb:function(k,j,i){}};return f})();